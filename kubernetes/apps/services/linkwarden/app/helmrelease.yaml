---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: linkwarden
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.7.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      linkwarden:
        replicas: 1
        strategy: RollingUpdate
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/chrisbsmith/linkwarden
              tag: v2.4.8-2
            env:
              NEXT_PUBLIC_EMAIL_PROVIDER: false
              EMAIL_SERVER: smtp-relay.default.svc.cluster.local:25
              NEXT_PUBLIC_AUTHELIA_ENABLED: true
              AUTHELIA_WELLKNOWN_URL: "https://auth.${SECRET_DOMAIN}/.well-known/openid-configuration"
              AUTHELIA_SCOPES: "openid email profile"
            envFrom: &envFrom
              - secretRef:
                  name: linkwarden-secret
            securityContext:
              allowPrivilegeEscalation: false
              # readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                memory: 128Mi
                cpu: 10m
              limits:
                memory: 1Gi
        pod:
          securityContext:
            runAsUser: 568
            runAsGroup: 568
            runAsNonRoot: true
            fsGroup: 568
            fsGroupChangePolicy: OnRootMismatch
    service:
      app:
        controller: linkwarden
        ports:
          http:
            port: &port 3000

    serviceMonitor:
      app:
        serviceName: linkwarden
        enabled: true
        endpoints:
          - port: metrics
            scheme: http
            path: /metrics
            interval: 1m
            scrapeTimeout: 10s
    ingress:
      app:
        enabled: true
        className: internal
        annotations:
          external-dns.alpha.kubernetes.io/target: internal.${SECRET_DOMAIN}
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
          - host: &customHost "bookmarks.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *host
              - *customHost
    persistence:
      config:
        enabled: true
        type: emptyDir
        globalMounts:
          - path: /tmp
      data:
        enabled: true
        type: persistentVolumeClaim
        storageClass: local-path
        size: 5Gi
        accessMode: ReadWriteOnce
        retain: true
        globalMounts:
          - path: /data/data
            readOnly: false
